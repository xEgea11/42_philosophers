Check_args
Set_table
start_dining
clean_table
Test_git

*****************TODO Things*********************
-[Arg_checker]		 ----		I think is OK
-[Set_table] 	Do we actually need to convert to microseconds (ie. multiply it by 1000)?
-[Init] How to initialize?
	* We need a mechanism to make all philos wait until everyone is set
-[Algorithm] structure the algorithm in taking the forks so there is no deadlock ---> Implement it in routine?
-[Error_checking] Check errors for thread init and thread join, at least
-[Print function, data races] Since we changed the print function, so it has all the actions, there are data races, look where we need to put the mutex at
-[Waiter - Monitor] We need a thread with its routine to control every philosopher while they eat
-[Clean_table] Function to clean the table and finish the program
-[Timestamps] We need to properly set the time when philos eat, sleep and think
-[Times_must_eat] Change the hardcode that we have so philos eat indefenitely if no "times_must_eat" is declared

------------------------------DETALLES--------------------------------------
Makefile:
	-fsanitize=thread --> it detects data races, and print statistics to stderr